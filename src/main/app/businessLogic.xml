<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd">
    <data-mapper:config name="case_to_customobject" transformationGraphPath="case_to_customobject.grf" doc:name="case_to_customobject"/>
    <batch:job name="batch">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:process-records>
            <batch:step name="getCaseInBStep" filter-expression="#['B'.equals(flowVars['sourceSystem']) || payload['ExtId__c'] == null]">
                <enricher source="#[payload]" target="#[recordVars['caseInTargetInstance']]" doc:name="store Case">
	            	<sfdc:query-single config-ref="SalesforceB" query="SELECT Id, Subject__c, LastModifiedDate FROM Case__c WHERE Id = '#[payload['ExtId__c']]'" doc:name="query Custom Object Case from B"/>
                </enricher>
                <logger message="AAAA  RECORD #[payload]  + RECORDVARS  #[recordVars['caseInTargetInstance']]" level="INFO" doc:name="Logger"/>            
            </batch:step>
            <batch:step name="upsertCaseInBStep" >
                <logger message="AAAAA  recordVar date : #[recordVars['caseInTargetInstance'].?get('LastModifiedDate')] payload date #[payload.get('LastModifiedDate')] " level="INFO" doc:name="Logger"/>
                <logger message="AAAA integration user prop #[ '${sfdc.a.integration.user.id}']   payload #[payload.get('LastModifiedById')]" level="INFO" doc:name="Logger"/>
                <choice doc:name="Choice">
                    <when expression="#[!('A'.equals(flowVars['sourceSystem']) &amp;&amp; (recordVars['caseInTargetInstance'] == null || recordVars['caseInTargetInstance'].get('LastModifiedDate') &lt;= payload.get('LastModifiedDate')) &amp;&amp; !('${sfdc.a.integration.user.id}'.equals(payload.get('LastModifiedById'))))]">
                        <expression-component doc:name="prepare case for upsert"><![CDATA[payload.remove('LastModifiedById');
payload.remove('LastModifiedDate');

payload.remove('ContactId');
payload.remove('AccountId');
//payload.remove('Id');
]]></expression-component>
                        <data-mapper:transform doc:name="Case to CustomObject" config-ref="case_to_customobject"/>
                    </when>
                    <otherwise>
                        <logger level="INFO" doc:name="Logger" message="ignoring record:  #[payload]"/>
                    </otherwise>
                </choice>

            </batch:step>
            <batch:step name="Batch_Step">
                <sfdc:upsert config-ref="SalesforceB" externalIdFieldName="Id" type="Case" doc:name="Salesforce">
                    <sfdc:objects ref="#[payload]"/>
                </sfdc:upsert>
            </batch:step>
            <batch:step name="Batch_Step1" filter-expression="#['A'.equals(flowVars['sourceSystem']) || payload['CaseId__c'] == null]">
                <enricher doc:name="Message Enricher">
                    <sfdc:query-single config-ref="SalesforceA" query="SELECT Id, Subject, LastModifiedDate FROM Case WHERE Id = '#[payload['CaseId__c']]'" doc:name="Salesforce"/>
                </enricher>
                <logger level="INFO" doc:name="Logger"/>
            </batch:step>
            <batch:step name="Batch_Stepqw">
                <logger level="INFO" doc:name="Logger"/>
                <choice doc:name="Choice"/>
            </batch:step>
           
        </batch:process-records>
    </batch:job>
</mule>
